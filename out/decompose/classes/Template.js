import{APPLY_PROPS,RAWC,RAWO}from"../consts/symbols.js";import{PROXY}from"../consts/proxy.js";import{findJsVars,templateToFunc}from"../funcs.js";import{gid}from"../globs.js";export class Template{constructor(e,t){this[RAWC]=Object.create(null),this[RAWO]=Object.create(null),this.callbacks=new Proxy(this[RAWC],PROXY.callbacks),this.observables=new Proxy(this[RAWO],PROXY.observables),this.properties={components:{}};let s=0;return t.forEach(((r,i)=>{let o,a;switch(typeof r){case"string":o=[...e[i].matchAll(/<$/g)],a=[...e[i+1].matchAll(/^>/g)],o[0]&&a[0]?(gid.get(),this.properties[r]=`gid value="${gid.val}"></gid`,this.properties.components[r]=`gid[value="${gid.val}"]`):this.properties[r]="";break;case"function":this.properties[`cProp${s}`]=r();break;case"object":this.properties[`cProp${s}`]=r.$;break;default:this.properties[`cProp${s}`]=r,t[i]=`cProp${s}`,s+=1}})),console.log(this.properties),this[APPLY_PROPS]=templateToFunc(e,t),this.elements=[],findJsVars(e.join(".")).forEach((e=>this.elements.push(e))),this}get name(){return this.Name}setName(e){return this.Name=e,customElements.define(`d-${this.Name}`,class extends HTMLElement{}),this.element=document.createElement(`d-${this.Name}`),this}setOnLoad(e){return this.onLoad=e,this}}