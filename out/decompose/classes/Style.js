import{ELEMENT,SHEET}from"../consts/symbols.js";export class Style{static get regex(){return{nesting:/(\s*§)([^{@§}]+)(§\s*{\s*)((?:[-\w]+:[^;]+;\s*)*)(§)([^{§}]+)(§\s*{\s*(?:[-\w]+:[^;]+;\s*)*})/,cleanup:/\s*§[^{§}]+§\s*{\s*}/g,queries:/(§[^{§@}]+§)(\s*{.*[^{§@}]*)(§@[^§@]+§)(\s*{)((?:\s*§[^{§}]*§\s*{(?:\s*[\w-]+:[^;]*;)*\s*})*)(\s*})/,markSelectors:/(^|;|{|})(?:\s*)([\w\-#.[\]="~>+:@&]+[@&\w\-#.,[\]="~>+ :]*[&\w\]*])(?:\s*)(?={)/g,unmarkSelectors:/§([^{§}]+)§/g,scope:/((?:^|})\s*)([^@&{,}]*)(?={|,)/,separate:/(^)(\s*[^{}]*{)((?:[^{}]*)|(?:[^{}]*{[^{}]*})*)(\s*})/}}static get normalize(){return e=>e.replaceAll(/\s+/g," ").replaceAll(/(\s*)(\{|\}|;)(\s*)/g,"$2 ").replaceAll("@nest","").replaceAll(Style.regex.markSelectors,"$1 §$2§")}static get replaceQueries(){return"$3$4 $1 {$5$6 } $1$2"}static get replaceNesting(){return(e,t,s,l,r,c,n,i)=>{let a=s.replaceAll("§",""),p=n.replaceAll("§",""),g=a.split(","),o=p.split(","),u=[];for(let e in g){let t=g[e];for(let e in o)u.push(o[e].replace("&",t))}return`${t}${s}${l}${r}}${t}${u.join(",")}${i}${t}${s}${l}`}}constructor(){this[ELEMENT]=document.createElement("style"),this[ELEMENT].id="de-style",document.head.appendChild(this[ELEMENT]),this[SHEET]=this[ELEMENT].sheet}get insertRule(){return e=>(this[SHEET].insertRule(e),"")}insert(e){let t=Style.normalize(e),s=(e,s)=>{for(;t.match(e);)t=t.replace(e,s);return t=t.replaceAll(Style.regex.cleanup,""),t};return s(Style.regex.nesting,Style.replaceNesting),t.includes("@")&&(s(Style.regex.queries,Style.replaceQueries),s(Style.regex.nesting,Style.replaceNesting)),t=t.replaceAll(Style.regex.unmarkSelectors,"$1"),console.log(t),s(Style.regex.separate,this.insertRule),this}insertScoped(e,t){let s=t.replaceAll(/\s+/g," ");for(;s.match(Style.regex.scope);)s=s.replace(Style.regex.scope,"$1& $2");return s=`${e} { ${s} }`,this.insert(s)}}