import{PROXY}from"./consts/proxy.js";import{state}from"./state.js";import{componentMaker}from"./componentMaker.js";let pageRegistry=Object.create(null);var innerHead,upd,pages=new Proxy(pageRegistry,PROXY.components);export var page={elements:{page:document.querySelector("de-compose")}};function newPage(e,...t){return a=>{let n=e.flat();n.unshift(`<de-compose @page@ de-page="${a.name}">${n.shift()}`),n.push(`${n.pop()}</de-compose>`),a.lines=n,a.keys=t;let o=componentMaker(a);pageRegistry[a.name]={load(e){document.title=a.title;let t=new o(e);page.elements.page.insertAdjacentElement("afterend",t.elements.page),page.elements.page.remove(),page=t}}}}function navigate(e){pages[e].load(state.props),state.url=new URL(location.protocol+location.host+location.pathname+`/#/${e}`),upd&&upd(),window.onpopstate=()=>{console.log(location.hash),location.hash!==`#${e}`&&navigate(location.hash)}}export var router={set head(e){innerHead=e,page.element.insertAdjacentElement("beforebegin",innerHead.element),upd=innerHead.callbacks.onLoad},get head(){return innerHead},pages:pages,newPage:newPage,navigate:navigate};